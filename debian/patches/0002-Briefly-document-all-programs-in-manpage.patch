From: Maykel Moya <mmoya@mmoya.org>
Date: Mon, 22 Oct 2012 19:00:24 +0200
Subject: Briefly document all programs in manpage

---
 thc-ipv6.8 |  249 ++++++++++++++++++++++++++++++++++++++++++++++--------------
 1 file changed, 192 insertions(+), 57 deletions(-)

--- thc-ipv6.orig/thc-ipv6.8
+++ thc-ipv6/thc-ipv6.8
@@ -2,7 +2,7 @@
 .\" First parameter, NAME, should be all caps
 .\" Second parameter, SECTION, should be 1-8, maybe w/ subsection
 .\" other parameters are allowed: see man(7), man(1)
-.TH THC-IPV6 8 "May 2012"
+.TH ATTACK-TOOLKIT6 8 "Oct 2012"
 .\" Please adjust this date whenever revising the manpage.
 .\"
 .\" Some roff macros, for reference:
@@ -16,76 +16,253 @@
 .\" .sp <n>    insert n+1 empty lines
 .\" for manpage-specific macros, see man(7)
 .SH NAME
-thc-ipv6 \- Tools to play with IPv6
+attack-toolkit6 \- The Hacker Choice's IPv6 Attack Toolkit (aka thc-ipv6)
 .SH SYNOPSIS
-.B any-thc-ipv6-tool [-r] other options ...
-.SH OPTIONS
+.B tool [general options] tool's options ...
+.SH GENERAL OPTIONS
 .TP
 .B \-r
-Send RAW frames to device (no ethernet frames. this is for tunnels.).
+Send RAW frames instead of Ethernet frames to device (this is for tunnels).
+.TP
+.B \-h
+Show detailed usage options.
 .SH DESCRIPTION
-This manual page documents briefly the
-.B thc-ipv6
+This manual page briefly documents each of the
+.B attack-toolkit6
+tools. Not all options are listed here, to see the full list of
+options of each tool please invoke them with
+.B -h.
 .PP
 .TP
-.B parasite6 <interface> [fake-mac]
-This is an "ARP spoofer" for IPv6, redirecting all local traffic to your
-own system (or nirvana if fake-mac does not exist) by answering falsely
-to Neighbor Solitication requests, specifying FAKE-MAC results in a local DOS
-
-.B dos-new-ip6 <interface>
-This tools prevents new ipv6 interfaces to come up, by sending answers
-to duplicate ip6 checks (DAD). This results in a DOS for new ipv6
+.B atk6-address6 <mac-address|ipv4-address|ipv6-address> [ipv6-prefix]
+Converts a MAC or IPv4 address to an IPv6 address (link local if no
+prefix is given as 2nd option) or, when an IPv6 address is given, prints
+the MAC or IPv4 address.
+.TP
+.B atk6-alive6 [-r] <interface> [unicast-or-multicast-address [remote-router]]
+Shows alive addresses in the segment. If you specify a remote router, the
+packets are sent with a routing header prefixed by fragmentation.
+.TP
+.B atk6-covert_send6 <interface> <target> <file> [port]
+Sends the content of FILE covertly to the target.
+.TP
+.B atk6-covert_send6d <interface> <file>
+Writes received covertly content to FILE.
+.TP
+.B atk6-denial6 [-r] <interface> <target-ip> <test-case-number>
+Performs various denial of service (DoS) attacks against a target.
+.TP
+.B atk6-detect-new-ip6 <interface> [scriptname]
+This tools detects new IPv6 addresses joining the local network. If
+scriptname is supplied, it is executed with the detected IPv6 address as
+parameter.
+.TP
+.B atk6-detect_sniffer6 <interface> [target-ip]
+Tests if systems on the local LAN are sniffing. Works against Windows,
+Linux, OS/X and *BSD systems.
+.TP
+.B atk6-dnsdict6 [-t THREADS] <domain> [dictionary-file]
+Enumerates a domain for DNS entries, it uses a dictionary file if supplied
+or a built-in list otherwise.
+.TP
+.B atk6-dnsrevenum6 <dns-server> <ipv6-address>
+Performs a fast reverse DNS enumeration.
+.TP
+.B atk6-dos-new-ip6 <interface>
+This tools prevents new IPv6 interfaces to come up, by sending answers
+to duplicate IPv6 checks (DAD). This results in a DoS for new IPv6
 devices.
+.TP
+.B atk6-dump_router6 <interface>
+Dumps all local routers and their information.
+.TP
+.B atk6-exploit6 [-r] <interface> <target-ip> [test-case-number]
+Performs exploits of various CVE known IPv6 vulnerabilities againts target.
+.TP
+.B atk6-fake_advertise6 <interface> <ip-address> [target-address [own-mac-address]]
+Advertise IPv6 address on the network (with own MAC if not defined)
+sending it to the all-nodes multicast address if no target specified.
+.TP
+.B atk6-fake_dhcps6 <interface> <network-address/prefix-length> <dns-server>
+Fake DHCPv6 server. Used to configure an address and set a DNS server.
+.TP
+.B atk6-fake_dns6d <interface> <ipv6-address>
+Fake DNS server that serves the same IPv6 address to any lookup
+request.
+.TP
+.B atk6-fake_dnsupdate6 <dns-server> <fqdn> <ipv6-address>
+Send false DNS update requests.
+.TP
+.B atk6-fake_mipv6 [-r] <interface> <home-address> <home-agent-address> <care-of-address>
+If the mobile IPv6 home-agent is mis-configured to accept MIPv6 updates without
+IPSEC, this will redirect all packets for home-address to care-of-address.
+.TP
+.B atk6-fake_mld6 [-r] <interface> <multicast-address> [[target-address] [[ttl] [[own-ip] [own-mac-address]]]]
+Advertise yourself in a multicast group of your choice.
+.TP
+.B atk6-fake_mld26
+This uses the MLDv2 protocol. Only a subset of what the protocol is
+able to do is possible to implement via a command line.
+.TP
+.B atk6-fake_pim6 [-t ttl] [-s src6] [-d dst6] <interface> {<hello> [dr_priority]|{join|prune} <neighbor6> <multicast6> <target6>}
+The hello command takes optionally the DR priority (default: 0).
 
-.B detect-new-ip6 <interface> [scriptname]
-This tools detects new ipv6 addresses joining the local network.  If
-scriptname is supplied, it is executed with the detected IPv6 address as
-option
+The join and prune commands need the multicast group to modify, the target\naddress that joins or leavs and the neighbor PIM router.
 
-.B fake_router6 [-r] <interface> <router-ip-link-local
-network-address/prefix-length> <mtu> [mac-address]
-Announce yourself as a router and try to become the default router.  If
-a non-existing mac-address is supplied, this results in a DOS.
+Use -s to spoof the source ip6, -d to send to another address than ff02::d,\nand -t to set a different TTL (default: 1).
+.TP
+.B atk6-fake_router6 [-r] <interface> <router-ip-link-local network-address/prefix-length> <mtu> [mac-address]
+Announce yourself as a router and try to become the default router. If
+a non-existing mac-address is supplied, this results in a DoS.
+.TP
+.B atk6-fake_router26 <interface>
+Similar to
+.B atk6-fake_router6
+but with more options available.
+.TP
+.B atk6-fake_solicitate6 <interface> <solicited-ip>
+Solicits IPv6 address on the network, sending it to the all-nodes
+multicast address
+.TP
+.B atk6-firewall6 [-u] <interface> <destination> <port> [test-case-no]
+Performs various ACL bypass attempts to check implementations.
 
-.B fake_advertise6 <interface> <ip-address> [target-address [own-mac-address]]
-Advertise ipv6 address on the network (with own mac if not defined)
-sending it to the all-nodes multicast address if no target specified.
+Defaults to TCP ports, option -u switches to UDP.
 
-.B fake_mld6 [-r] <interface> <multicast-address> [[target-address] [[ttl] [[own-ip] [own-mac-address]]]]
-Advertise yourself in a multicast group of your choice.
+For all test cases to work, ICMPv6 ping to the destination must be allowed.
+.TP
+.B atk6-flood_advertise6 [-r] <interface>
+Flood the local network with neighbor advertisements.
+.TP
+.B atk6-flood_dhcpc6 <interface> [domain-name]
+DHCP client flooder. Use to deplete the IP address pool a DHCP6 server
+is offering. Note: if the pool is very large, this is rather
+senseless.
+.TP
+.B atk6-flood_mld6 <interface>
+Flood the local network with MLD reports.
+.TP
+.B atk6-flood_mld26 <interface>
+Flood the local network with MLDv2 reports.
+.TP
+.B atk6-flood_mldrouter6
+Flood the local network with MLD router advertisements.
+.TP
+.B atk6-flood_router6 [-r] <interface>
+Flood the local network with router advertisements.
+.TP
+.B atk6-flood_router26 <interface>
+Similar to
+.B atk6-flood_router6
+but with more options available.
+.TP
+.B atk6-flood_solicitate6 <interface> [target-ip]
+Flood the network with neighbor solicitations.
+.TP
+.B atk6-fragmentation6 <interface> <target-ip>
+Performs fragment firewall and implementation checks, including
+denial-of-service.
+.TP
+.B atk6-fuzz_ip6 [-r] [-x] [-t number | -T number] [-p number] [-IFSDHRJ] [-1|-2|-3|-4|-5|-6|-7] <interface> <unicast-or-multicast-address> [address-in-data-pkt]
+Fuzzes an ICMP6 packet.
+.TP
+.B atk6-inject_alive6 [-ap] <interface>
+This tool answers to keep-alive requests on PPPoE and 6in4 tunnels; for PPPoE\nit also sends keep-alive requests.
 
-.B fake_mipv6 [-r] <interface> <home-address> <home-agent-address> <care-of-address>
-If the mobile IPv6 home-agent is mis-configured to accept MIPV6 updates without
-IPSEC, this will redirect all packets for home-address to care-of-address
+Note that the appropriate environment variable THC_IPV6_{PPPOE|6IN4} must be set.
 
-.B redir6 [-r] <interface> <src-ip> <target-ip> <original-router> <new-router> [new-router-mac]
-Implant a route into src-ip, which redirects all traffic to target-ip to
-new-ip. You must know the router which would handle the route.
-If the new-router-mac does not exist, this results in a DOS.
+Option -a will actively send alive requests every 15 seconds.
 
-.B smurf6 [-r] <interface> <victim-ip> [multicast-network-address]
-Smurf the target with icmp echo replies. Target of echo request is the
-local all-nodes multicast address if not specified
+Option -p will not send replies to alive requests.
+.TP
+.B atk6-implementation6 [-r] <interface> <target-ip> [test-case-number]
+Performs some IPv6 implementation checks. Can be used to test firewalls too.
+.TP
+.B atk6-implementation6d [-r] <interface>
+Identifies test packets by the implementation6 tool, useful to check what
+packets passed a firewall.
+.TP
+.B atk6-inverse_lookup6 <interface> <mac-address>
+Performs an inverse address query, to get the IPv6 addresses that are
+assigned to a MAC address. Note that only few systems support this
+yet.
+.TP
+.B atk6-kill_router6 <interface> <target-ip>
+Announce that target router is going down to delete it from the
+routing tables. If you supply a '*' as target-ip, this tool will sniff
+the network for RAs and immediately send the kill packet.
+.TP
+.B atk6-ndpexhaust26 <interface> [-acpPTUrR] [-s sourceip6] <target-network>
+Flood the target /64 network with ICMPv6 TooBig error messages.
+This tool version is manyfold more effective than ndpexhaust6.
 
-.B alive6 [-r] <interface> [unicast-or-multicast-address [remote-router]]
-Shows alive addresses in the segment. If you specify a remote router, the
-packets are sent with a routing header prefixed by fragmentation
+-a      add a hop-by-hop header with router alert.
+
+-c      do not calculate the checksum to save time.
+
+-p      send ICMPv6 Echo Requests.
 
-.B toobig6 [-r] <interface> <target-ip> <existing-ip> <mtu>
-Implants the specified mtu on the target
+-P      send ICMPv6 Echo Reply.
 
-.B rsmurf6 [-r] <interface> <victim-ip>
-Smurfs the local network of the victim. Note: this depends on an
-implementation error, currently only verified on Linux (fixed in current versions).
-Evil: "ff02::1" as victim will DOS your local LAN completely
+-T      send ICMPv6 Time-to-live-exeeded.
 
-.B implementation6 [-r] <interface> <destination> [test-case-number]
-Performs some ipv6 implementation checks
+-U      send ICMPv6 Unreachable (no route).
 
-.B sendpees6 <interface> <key_length> <prefix> <victim-ip>
-Send SEND neighbor solicitation messages and make target to verify a lota CGA and RSA signatures.
+-r      randomize the source from your /64 prefix.
 
+-R      randomize the source fully.
+
+-s sourceip6  use this as source ipv6 address.
+.TP
+.B atk6-ndpexhaust6 <interface> <target-network>
+Randomly pings IPs in target network.
+.TP
+.B atk6-node_query6 <interface> <target-ip>
+Sends an ICMPv6 node query request to the target and dumps the replies.
+.TP
+.B atk6-parasite6 <interface> [fake-mac]
+This is an "ARP spoofer" for IPv6, redirecting all local traffic to your
+own system (or nirvana if fake-mac does not exist) by answering falsely
+to Neighbor Solitication requests, specifying FAKE-MAC results in a local DoS.
+.TP
+.B atk6-passive_discovery6 <interface> [scriptname]
+Passivly sniffs the network and dump all client's IPv6 addresses
+detected. If scriptname is supplied, it is called with the detected
+IPv6 address as first and the interface as second parameters.
+.TP
+.B atk6-randicmp6 <interface> <target-ip>
+Sends all ICMPv6 type and code combinations to target.
+.TP
+.B atk6-redir6 [-r] <interface> <src-ip> <target-ip> <original-router> <new-router> [new-router-mac]
+Implant a route into src-ip, which redirects all traffic to target-ip to
+new-ip. You must know the router which would handle the route.
+If the new-router-mac does not exist, this results in a DoS.
+.TP
+.B atk6-rsmurf6 [-r] <interface> <target-ip>
+Smurfs the local network of the target. Note: this depends on an
+implementation error, currently only verified on Linux (fixed in
+current versions).
+Evil: "ff02::1" as victim will DoS your local LAN completely.
+.TP
+.B atk6-sendpees6 <interface> <key_length> <prefix> <target-ip>
+Send SEND neighbor solicitation messages and make target to verify a
+lot of CGA and RSA signatures.
+.TP
+.B atk6-sendpeesmp6 <interface> <key_length> <prefix> <target-ip>
+Multithreaded version of sendpees6.
+.TP
+.B atk6-smurf6 [-r] <interface> <target-ip> [multicast-network-address]
+Smurf the target with ICMP6 echo replies. Target of echo request is the
+local all-nodes multicast address if not specified.
+.TP
+.B atk6-thcping6 <interface> <src6> <dst6> <srcmac> <dstmac> <data>
+Craft your special ICMP6 echo request packet.
+.TP
+.B atk6-toobig6 [-r] <interface> <target-ip> <existing-ip> <mtu>
+Implants the specified MTU on the target.
+.TP
+.B atk6-trace6 [-r] [-d] <interface> <target-ip> [port]
+A basic but very fast traceroute6 program.
 .SH SEE ALSO
 .BR nmap (1),
 .BR amap (1),
@@ -95,5 +272,6 @@
 .PP
 The homepage for this toolkit is: http://www.thc.org/thc-ipv6
 .PP
-This manual page was written by Michael Gebetsroither <gebi@grml.org>,
-for the Debian project (but may be used by others).
+This manual page was written by Maykel Moya <mmoya@mmoya.org> and Arturo Borrero Gonzalez <arturo.borrero.glez@gmail.com>,
+for the Debian project (but may be used by others). It's based
+on previous work by Michael Gebetsroither <gebi@grml.org>.
